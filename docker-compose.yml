services:
  api: 
    container_name: "movies-api"
    environment:
      - NODE_ENV=${NODE_ENV}
    env_file:
      - .env
    build:
      context: .
      target: "${NODE_ENV}"
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules
    # restart: unless-stopped
    depends_on:
      - redis
      - postgres
    networks:
      - movies-network
  postgres:
    container_name: "movies-postgres"
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: "${POSTGRES_DB}"
      PG_DATA: /var/lib/postgresql/data
    volumes:
      - movies-postgres-data:/var/lib/postgresql/data
      - ./init.sql://docker-entrypoint-initdb.d/init.sql
    networks:
      - movies-network
  redis:
    container_name: "movies-redis"
    image: redis
    volumes:
      - redis:/data
    networks:
      - movies-network
  
volumes:
  movies-postgres-data:
  redis:

networks:
  movies-network: